/*
 * DataRouter.cpp
 *
 *  Created on: Jan 31, 2011
 *      Author: arild
 */

#include <string.h>
#include <glog/logging.h>
#include "DataRouter.h"

using namespace std;

DataRouter::DataRouter()
{
	_handlers = new handlerMap();
	_numSamplesRouted = 0;
}

DataRouter::~DataRouter()
{
}

void DataRouter::RegisterHandler(IDataHandler *handler)
{
	handler->OnStart();
	string key = handler->GetKey();
	(*_handlers)[key] = handler;
	LOG(INFO) << "Handler registered: Key=" << key;
}

void DataRouter::Route(char *packet, int length)
{
	string key = packet;
	int dataLength = length - key.length();
	unsigned char *data = (unsigned char *) &packet[key.length() + 1]; // +1 for skipping '\0' in string

	LOG(INFO) << "Routing:  Key = " << key << " | dataLength = " << dataLength;

	IDataHandler *handler;
	try {
		if (_handlers->count(key)) {
			LOG(ERROR) << "handler not available: " << key;
			return;
		}
		handler = (*_handlers)[key];
	} catch (exception &e) {
		LOG(ERROR) << "faild finding handler: ", e.what();
	}
	LOG(INFO) << "Handling data...";
	handler->Handle(data, dataLength);
	LOG(INFO) << "Data handled";

	_numSamplesRouted += 1;
	if ((_numSamplesRouted % 1000) == 0)
		LOG(INFO) << "Num samples routed: " << _numSamplesRouted;
}
