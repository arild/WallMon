// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#ifndef PROTOBUF_Protocol_2eproto__INCLUDED
#define PROTOBUF_Protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Protocol_2eproto();
void protobuf_AssignDesc_Protocol_2eproto();
void protobuf_ShutdownFile_Protocol_2eproto();

class DataPacket;

// ===================================================================

class DataPacket : public ::google::protobuf::Message {
 public:
  DataPacket();
  virtual ~DataPacket();
  
  DataPacket(const DataPacket& from);
  
  inline DataPacket& operator=(const DataPacket& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPacket& default_instance();
  
  void Swap(DataPacket* other);
  
  // implements Message ----------------------------------------------
  
  DataPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataPacket& from);
  void MergeFrom(const DataPacket& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 numThreads = 1;
  inline bool has_numthreads() const;
  inline void clear_numthreads();
  static const int kNumThreadsFieldNumber = 1;
  inline ::google::protobuf::uint32 numthreads() const;
  inline void set_numthreads(::google::protobuf::uint32 value);
  
  // required double userTime = 2;
  inline bool has_usertime() const;
  inline void clear_usertime();
  static const int kUserTimeFieldNumber = 2;
  inline double usertime() const;
  inline void set_usertime(double value);
  
  // required double systemTime = 3;
  inline bool has_systemtime() const;
  inline void clear_systemtime();
  static const int kSystemTimeFieldNumber = 3;
  inline double systemtime() const;
  inline void set_systemtime(double value);
  
  // required double userCpuLoad = 4;
  inline bool has_usercpuload() const;
  inline void clear_usercpuload();
  static const int kUserCpuLoadFieldNumber = 4;
  inline double usercpuload() const;
  inline void set_usercpuload(double value);
  
  // required double systemCpuLoad = 5;
  inline bool has_systemcpuload() const;
  inline void clear_systemcpuload();
  static const int kSystemCpuLoadFieldNumber = 5;
  inline double systemcpuload() const;
  inline void set_systemcpuload(double value);
  
  // @@protoc_insertion_point(class_scope:DataPacket)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 numthreads_;
  double usertime_;
  double systemtime_;
  double usercpuload_;
  double systemcpuload_;
  friend void  protobuf_AddDesc_Protocol_2eproto();
  friend void protobuf_AssignDesc_Protocol_2eproto();
  friend void protobuf_ShutdownFile_Protocol_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DataPacket* default_instance_;
};
// ===================================================================


// ===================================================================

// DataPacket

// required uint32 numThreads = 1;
inline bool DataPacket::has_numthreads() const {
  return _has_bit(0);
}
inline void DataPacket::clear_numthreads() {
  numthreads_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 DataPacket::numthreads() const {
  return numthreads_;
}
inline void DataPacket::set_numthreads(::google::protobuf::uint32 value) {
  _set_bit(0);
  numthreads_ = value;
}

// required double userTime = 2;
inline bool DataPacket::has_usertime() const {
  return _has_bit(1);
}
inline void DataPacket::clear_usertime() {
  usertime_ = 0;
  _clear_bit(1);
}
inline double DataPacket::usertime() const {
  return usertime_;
}
inline void DataPacket::set_usertime(double value) {
  _set_bit(1);
  usertime_ = value;
}

// required double systemTime = 3;
inline bool DataPacket::has_systemtime() const {
  return _has_bit(2);
}
inline void DataPacket::clear_systemtime() {
  systemtime_ = 0;
  _clear_bit(2);
}
inline double DataPacket::systemtime() const {
  return systemtime_;
}
inline void DataPacket::set_systemtime(double value) {
  _set_bit(2);
  systemtime_ = value;
}

// required double userCpuLoad = 4;
inline bool DataPacket::has_usercpuload() const {
  return _has_bit(3);
}
inline void DataPacket::clear_usercpuload() {
  usercpuload_ = 0;
  _clear_bit(3);
}
inline double DataPacket::usercpuload() const {
  return usercpuload_;
}
inline void DataPacket::set_usercpuload(double value) {
  _set_bit(3);
  usercpuload_ = value;
}

// required double systemCpuLoad = 5;
inline bool DataPacket::has_systemcpuload() const {
  return _has_bit(4);
}
inline void DataPacket::clear_systemcpuload() {
  systemcpuload_ = 0;
  _clear_bit(4);
}
inline double DataPacket::systemcpuload() const {
  return systemcpuload_;
}
inline void DataPacket::set_systemcpuload(double value) {
  _set_bit(4);
  systemcpuload_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Protocol_2eproto__INCLUDED
